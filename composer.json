{
    "name": "diego-ninja/sorter",
    "description": "Sort arrays and objects by multiple fields with unicode characters",
    "license": "BSD-3-Clause",
    "keywords": [
        "php8.2",
        "sort",
        "sorter",
        "array",
        "objects",
        "collections",
        "psr-4"
    ],
    "authors": [
        {
            "name": "Diego Rin Mart√≠n",
            "email": "yosoy@diego.ninja"
        },
        {
            "name": "Jacek Kobus",
            "email": "kobus.jacek@gmail.com"
        }
    ],
    "homepage": "https://github.com/diego-ninja/sorter",
    "support": {
        "issues": "https://github.com/diego-ninja/sorter/issues",
        "source": "https://github.com/diego-ninja/sorter"
    },
    "require": {
        "php": "^8.2",
        "ext-bcmath": "*",
        "ext-intl": "*",
        "ext-mbstring": "*"
    },
    "require-dev": {
        "captainhook/captainhook": "^5.10",
        "captainhook/plugin-composer": "^5.3",
        "dealerdirect/phpcodesniffer-composer-installer": "^1",
        "ergebnis/composer-normalize": "^2.30",
        "icanhazstring/composer-unused": "^0.8.9",
        "maglnet/composer-require-checker": "^4.6",
        "mockery/mockery": "^1",
        "moxio/captainhook-psalm": "^0.3.0",
        "php-parallel-lint/php-console-highlighter": "^1.0",
        "php-parallel-lint/php-parallel-lint": "^1.3",
        "phpunit/phpunit": "^10",
        "psalm/plugin-phpunit": "^0.18.4",
        "ramsey/conventional-commits": "^1.3",
        "roave/security-advisories": "dev-latest",
        "squizlabs/php_codesniffer": "^3.5",
        "vimeo/psalm": "^5"
    },
    "autoload": {
        "psr-4": {
            "Ninja\\Sorter\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Ninja\\Sorter\\Tests\\": "tests/"
        }
    },
    "config": {
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "captainhook/plugin-composer": true,
            "php-http/discovery": false,
            "ergebnis/composer-normalize": true
        },
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true
    },
    "extra": {
        "branch-alias": {
            "dev-master": "1.0.x-dev"
        }
    },
    "scripts": {
        "dev:analyze": [
            "@dev:analyze:psalm"
        ],
        "dev:analyze:psalm": "psalm --no-cache",
        "dev:build:clean": "git clean -fX builds/",
        "dev:docs": "export NODE_OPTIONS=--openssl-legacy-provider; npm run docs:dev",
        "dev:lint": [
            "@dev:lint:syntax",
            "@dev:lint:style"
        ],
        "dev:lint:fix": "phpcbf",
        "dev:lint:style": "phpcs --colors --encoding=utf-8 -n",
        "dev:lint:syntax": "parallel-lint --colors src/ tests/",
        "dev:test": [
            "@dev:lint",
            "@dev:analyze",
            "@dev:test:unit"
        ],
        "dev:test:coverage:ci": "phpunit --colors=always --coverage-text --coverage-clover build/coverage/clover.xml --coverage-cobertura build/coverage/cobertura.xml --coverage-crap4j build/coverage/crap4j.xml --coverage-xml build/coverage/coverage-xml --log-junit build/junit.xml",
        "dev:test:coverage:html": "phpunit --colors=always --coverage-html build/coverage/coverage-html/",
        "dev:test:unit": "phpunit --colors=always --testdox",
        "dev:test:unit:debug": "phpunit --colors=always --testdox -d xdebug.profiler_enable=on",
        "test": "@dev:test"
    },
    "scripts-descriptions": {
        "dev:analyze": "Runs all static analysis checks.",
        "dev:analyze:psalm": "Runs the Psalm static analyzer.",
        "dev:build:clean": "Cleans the build/ directory.",
        "dev:lint": "Runs all linting checks.",
        "dev:lint:fix": "Auto-fixes coding standards issues, if possible.",
        "dev:lint:style": "Checks for coding standards issues.",
        "dev:lint:syntax": "Checks for syntax errors.",
        "dev:test": "Runs linting, static analysis, and unit tests.",
        "dev:test:coverage:ci": "Runs unit tests and generates CI coverage reports.",
        "dev:test:coverage:html": "Runs unit tests and generates HTML coverage report.",
        "dev:test:unit": "Runs unit tests.",
        "test": "Runs linting, static analysis, and unit tests."
    }
}
